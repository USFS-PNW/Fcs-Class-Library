//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FcsClassLibrary {
  using System;
  using Devart.Data.Oracle;
  
  
  public class FCS_GET_VOLTSGRS : Devart.Data.Oracle.OraclePackage {
    
    public FCS_GET_VOLTSGRS() {
      base.PackageName = "FCS.FCS_GET_VOLTSGRS";
    }
    
    [System.ComponentModel.ReadOnlyAttribute(true)]
    public new string PackageName {
      get {
        return base.PackageName;
      }
    }
    
    public System.Nullable<decimal> Fia_VOLTSGRS(string configid, System.Nullable<decimal> spn, System.Nullable<decimal> dbh, System.Nullable<decimal> tht, System.Nullable<decimal> sawht, System.Nullable<decimal> boleht, System.Nullable<decimal> stems, System.Nullable<decimal> stand_Si, System.Nullable<decimal> stand_Ba, System.Nullable<decimal> qual, System.Nullable<decimal> statuscd, System.Nullable<decimal> treeclcd) {
      OracleParameterCollection parameters;
      parameters = this.Parameters;
      parameters.Clear();
      OracleParameter parameter;
      parameter = new OracleParameter("RESULT", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.ReturnValue;
      parameters.Add(parameter);
      parameter = new OracleParameter("CONFIGID", Devart.Data.Oracle.OracleDbType.VarChar);
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameter.Value = configid;
      parameters.Add(parameter);
      parameter = new OracleParameter("SPN", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (spn.HasValue) {
        parameter.Value = spn;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("DBH", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (dbh.HasValue) {
        parameter.Value = dbh;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("THT", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (tht.HasValue) {
        parameter.Value = tht;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("SAWHT", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (sawht.HasValue) {
        parameter.Value = sawht;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("BOLEHT", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (boleht.HasValue) {
        parameter.Value = boleht;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("STEMS", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (stems.HasValue) {
        parameter.Value = stems;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("STAND_SI", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (stand_Si.HasValue) {
        parameter.Value = stand_Si;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("STAND_BA", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (stand_Ba.HasValue) {
        parameter.Value = stand_Ba;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("QUAL", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (qual.HasValue) {
        parameter.Value = qual;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("STATUSCD", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (statuscd.HasValue) {
        parameter.Value = statuscd;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("TREECLCD", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (treeclcd.HasValue) {
        parameter.Value = treeclcd;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      ExecuteProcedure("FIA_VOLTSGRS", parameters);
      if ((Parameters["Result"].Value == System.DBNull.Value)) {
        return null;
      }
      else {
        return ((System.Nullable<decimal>)(Parameters["Result"].Value));
      }
    }
    
    public string Get_Value_Char(string configid, System.Nullable<decimal> spn, string par) {
      OracleParameterCollection parameters;
      parameters = this.Parameters;
      parameters.Clear();
      OracleParameter parameter;
      parameter = new OracleParameter("RESULT", Devart.Data.Oracle.OracleDbType.VarChar);
      parameter.Direction = System.Data.ParameterDirection.ReturnValue;
      parameters.Add(parameter);
      parameter = new OracleParameter("CONFIGID", Devart.Data.Oracle.OracleDbType.VarChar);
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameter.Value = configid;
      parameters.Add(parameter);
      parameter = new OracleParameter("SPN", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (spn.HasValue) {
        parameter.Value = spn;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("PAR", Devart.Data.Oracle.OracleDbType.VarChar);
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameter.Value = par;
      parameters.Add(parameter);
      ExecuteProcedure("GET_VALUE_CHAR", parameters);
      if ((Parameters["Result"].Value == System.DBNull.Value)) {
        return "";
      }
      else {
        return ((string)(Parameters["Result"].Value));
      }
    }
    
    public System.Nullable<decimal> Get_Value_Num(string configid, System.Nullable<decimal> spn, string par) {
      OracleParameterCollection parameters;
      parameters = this.Parameters;
      parameters.Clear();
      OracleParameter parameter;
      parameter = new OracleParameter("RESULT", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.ReturnValue;
      parameters.Add(parameter);
      parameter = new OracleParameter("CONFIGID", Devart.Data.Oracle.OracleDbType.VarChar);
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameter.Value = configid;
      parameters.Add(parameter);
      parameter = new OracleParameter("SPN", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (spn.HasValue) {
        parameter.Value = spn;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("PAR", Devart.Data.Oracle.OracleDbType.VarChar);
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameter.Value = par;
      parameters.Add(parameter);
      ExecuteProcedure("GET_VALUE_NUM", parameters);
      if ((Parameters["Result"].Value == System.DBNull.Value)) {
        return null;
      }
      else {
        return ((System.Nullable<decimal>)(Parameters["Result"].Value));
      }
    }
    
    public System.Nullable<decimal> Get_VOLTSGRS(string configid, System.Nullable<decimal> spn, System.Nullable<decimal> dbh, System.Nullable<decimal> tht, System.Nullable<decimal> sawht, System.Nullable<decimal> boleht, System.Nullable<decimal> stems, System.Nullable<decimal> stand_Si, System.Nullable<decimal> stand_Ba, System.Nullable<decimal> qual) {
      OracleParameterCollection parameters;
      parameters = this.Parameters;
      parameters.Clear();
      OracleParameter parameter;
      parameter = new OracleParameter("RESULT", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.ReturnValue;
      parameters.Add(parameter);
      parameter = new OracleParameter("CONFIGID", Devart.Data.Oracle.OracleDbType.VarChar);
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameter.Value = configid;
      parameters.Add(parameter);
      parameter = new OracleParameter("SPN", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (spn.HasValue) {
        parameter.Value = spn;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("DBH", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (dbh.HasValue) {
        parameter.Value = dbh;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("THT", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (tht.HasValue) {
        parameter.Value = tht;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("SAWHT", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (sawht.HasValue) {
        parameter.Value = sawht;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("BOLEHT", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (boleht.HasValue) {
        parameter.Value = boleht;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("STEMS", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (stems.HasValue) {
        parameter.Value = stems;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("STAND_SI", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (stand_Si.HasValue) {
        parameter.Value = stand_Si;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("STAND_BA", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (stand_Ba.HasValue) {
        parameter.Value = stand_Ba;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      parameter = new OracleParameter("QUAL", Devart.Data.Oracle.OracleDbType.Number);
      parameter.Direction = System.Data.ParameterDirection.Input;
      if (qual.HasValue) {
        parameter.Value = qual;
      }
      else {
        parameter.Value = System.DBNull.Value;
      }
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameters.Add(parameter);
      ExecuteProcedure("GET_VOLTSGRS", parameters);
      if ((Parameters["Result"].Value == System.DBNull.Value)) {
        return null;
      }
      else {
        return ((System.Nullable<decimal>)(Parameters["Result"].Value));
      }
    }
    
    public void Load_Loc_Config(string configid) {
      OracleParameterCollection parameters;
      parameters = this.Parameters;
      parameters.Clear();
      OracleParameter parameter;
      parameter = new OracleParameter("CONFIGID", Devart.Data.Oracle.OracleDbType.VarChar);
      parameter.Direction = System.Data.ParameterDirection.Input;
      parameter.Value = configid;
      parameters.Add(parameter);
      ExecuteProcedure("LOAD_LOC_CONFIG", parameters);
    }
  }
}
